{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol-geocoder/dist/ol-geocoder.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol-layerswitcher/src/ol-layerswitcher.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./main.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","angleInRadians","PI","angleInDegrees","a","b","extendStatics","__extends","setPrototypeOf","__proto__","__","this","constructor","canvas_LabelCache","_super","LabelCache","opt_highWaterMark","_this","consumers","clear","consumer","canvas","consumerId","util","prune","outer","canExpireCache","peekLastKey","pop","width","height","release","LRUCache","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureAndCacheTextWidth","measureTextWidths","rotateAtOffset","drawImage","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","css","fontFamily","setInterval","dom","div","heights","document","createElement","innerHTML","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","cache","lines","widths","numLines","currentWidth","offsetX","offsetY","translate","rotate","resetTransform","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","setFromArray","makeScale","compose","makeInverse","toString","set","e","f","transform1","transform2","dx1","dy1","sx","sy","angle","dx2","dy2","source","det","join","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","assign","getValues","var_sources","TypeError","output","arguments","values","proj_Projection","Projection","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","METERS","point","math","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","proj_transform","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","transformExtent","ol_extent","transformWithProjections","addCommon","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","linearFindNearest","arr","direction","reverseSubArray","begin","data","extension","isArray","remove","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","index","res","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","createCanvasContext2D","opt_width","opt_height","getContext","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","TRUE","FALSE","VOID","XY","XYZ","XYM","XYZM","IDLE","LOADING","LOADED","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","ANIMATING","INTERACTING","Event","propagationStopped","preventDefault","stopPropagation","FEET","PIXELS","TILE_PIXELS","USFEET","ADD","REMOVE","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","Property","CollectionEvent","opt_element","opt_index","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","array","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","deflateMultiCoordinatesArray","opt_endss","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","SimpleGeometry","layout","computeExtent","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","changed","anchor","opt_sy","opt_anchor","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","simplifiedEnds","tolerance","round","quantize","simplifiedEndss","UNDEFINED","READY","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_Base_js__WEBPACK_IMPORTED_MODULE_3__","_Property_js__WEBPACK_IMPORTED_MODULE_4__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_6__","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","map","setMap","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","render","frameState","layerRenderer","getRenderer","layerState","prepareFrame","renderFrame","PRECOMPOSE","renderEvent","managed","getZIndex","zIndex","layerStatesArray","createRenderer","visible","minResolution","maxResolution","transform2D","opt_dest","dest","anchorX","anchorY","PRERENDER","POSTRENDER","POSTCOMPOSE","RENDERCOMPLETE","Disposable","disposed_","dispose","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","map_","listenerKeys","setTarget","getMap","getOverlayContainerStopEvent","getElementById","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","color","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","Point","closestPointXY","closestPoint","minSquaredDistance","getType","intersectsExtent","MOVESTART","MOVEEND","Fill","color_","getColor","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","ARRAY_BUFFER","JSON","TEXT","XML","toFunction","createDefaultStyle","createEditingStyle","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_Circle_js__WEBPACK_IMPORTED_MODULE_2__","_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","fill_","fill","image_","renderer","stroke_","stroke","text_","zIndex_","getGeometry","getFill","getImage","getStroke","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","styleFunction","styles_1","defaultStyles","radius","styles","white","blue","concat","unByKey","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Observable","revision_","on","once","un","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","fromString","g","exec","el","rgb","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxExtent","pixelRatio","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","GeometryType","getOrientedFlatCoordinates","getEndss","myEnds","inflate","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","colorlike","render_canvas","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","drawCoordinates_","myBegin","declutterGroup","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","origin","getOrigin","getOpacity","getRotateWithView","getRotation","getScale","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","simplify","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","sqrt","acos","TextBuilder_extends","TEXT_ALIGN","right","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Polygon","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","TextPlacement","LINE","textAlign","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","NaN","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","strokeWidth","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","drawTextOnPath","startM","previousAngle","result","numChars","segmentM","segmentLength","pow","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","atan2","delta","interpolate","unshift","Executor_extends","tmpExtent","tmpTransform","ol_transform","p1","p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","label","containsKey","align","lineHeight","renderWidth","ceil","leftRight","strokeText","fillText","replayTextBackground_","strokeInstruction","beginPath","moveTo","lineTo","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","declutterArgs","origin_1","repeatSize","save","restore","renderDeclutter_","groupCount","box","collides","insert","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","flat_transform","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","arc","closePath","fn","coords","rotateWithView","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","flat_length","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","z","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutterReplays","hitExtent","contextSize","clearRect","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","getImageData","i_1","j_1","result_1","all","entry","executor","zs","sort","opt_builderTypes","opt_declutterReplays","builderTypes","0","floor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","getImageState","ImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","thisArg","loading","imageState","unlistenImageChange","load","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","events","EventType","handleFontsChanged_","pixelTransform_","inversePixelTransform_","canvasTransform","preRender","viewState","projectionExtent","vectorSource","getLayer","clipExtent","clipped","viewHints","ViewHint","getRenderTransform","skippedFeatureUids","getWrapX","worldWidth","world","transform_1","transform_2","postRender","parseFloat","layer_1","features_1","layer","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","canvas_Layer","Vector_extends","Vector_VectorLayer","VectorLayer","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","distance","bearing","lon1","dByR","lat","asin","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","render_","getPoints","getRadius","getRadius2","getAngle","setOpacity","setScale","getImageSize","getHitDetectionImageSize","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","CircleStyle","setRadius","AssertionError","message","highWaterMark","count_","entries_","oldest_","newest_","getCount","value_","key_","newer","older","peekLast","peekFirstKey","replace","ImageStyle","setRotateWithView","setRotation","rbush","default","quickselect","maxEntries","format","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","multiSelect","_all","search","bbox","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","lineStringLength","_events_Event_js__WEBPACK_IMPORTED_MODULE_0__","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","opt_glContext","inversePixelTransform","glContext","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","BaseLayer","properties","className_","className","state_","getClassName","sourceState","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setVisible","zindex","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","refresh","setAttributions","setState","attributionLike","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","Geometry","extentRevision_","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","features","dataProjection","addFeatures","functions","loadingstrategy_all","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","uid","update","getAll","getInExtent","forEach_","forEachInExtent","ol_obj","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","State","loader_","format_","url_","loader","asserts","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","ObjectEventType","valid","id","getId","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","LayerRenderer","layer_","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getDataAtPixel","pixel","handleImageChange_","hasFeatureAtCoordinate","loadImage","events_EventType","Layer_extends","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","tempTransform_","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","clipUnrotated","inverted","dispatchRenderEvent_","event_1","renderPixel","err","Uint8Array","createStyleFunction","_Object_js__WEBPACK_IMPORTED_MODULE_3__","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","setId","u","namespace","spin","hidden","address","country","city","road","olControl","glass","container","control","button","expanded","reset","inputText","icon","containerId","buttonControlId","inputQueryId","inputResetId","cssClasses","freeze","v","q","provider","placeholder","featureStyle","targetType","lang","limit","keepOpen","autoComplete","autoCompleteMinLength","debug","E","window","performance","Date","now","getTime","timing","navigationStart","T","test","P","O","S","D","classList","_","R","getElementsByClassName","getElementsByTagName","querySelectorAll","A","classname","attr","setAttribute","createDocumentFragment","RegExp","trim","setTimeout","els","createControl","B","F","settings","params","langs","V","addressdetails","countrycodes","accept-language","Q","U","callbackName","query","includeNeighborhood","maxResults","G","countrycode","pretty","no_annotations","Base","layerName","toLowerCase","newProvider","lastQuery","registeredListeners","mapClick","setListeners","getParameters","handleResponse","postcode","original","formatted","details","display_name","houseNumber","house_number","town","neighbourhood","resourceSets","resources","formattedAddress","results","lng","components","H","which","keyCode","clearTimeout","focus","clearResults","collapse","expand","firstChild","jsonp","Promise","reduce","encodeURIComponent","head","random","fetch","method","credentials","then","json","catch","$","console","info","createList","listenMapClick","addressTemplate","chosen","getView","fit","duration","animate","createFeature","addLayer","building","village","I","blur","getTargetElement","handleEvent","getLayers","setProvider","setProviderKey","content","hmr","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","stringify","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","addStyle","listToStyles","newStyles","base","media","insertStyleElement","lastStyleElementInsertedAtTop","nextSibling","before","removeStyleElement","idx","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","ol_MapEvent","MapEvent","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","viewportSize","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewProperty","coordinate1","coordinate2","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","area_linearRing","twiceArea","area_linearRings","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","GeometryLayout","deflate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","ol_proj","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","newResolution","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setCenter","setResolution","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","adjustCenter","deltaCoordinates","adjustResolution","isMoving","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","ol_Object","Group_extends","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","layerFilter","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","lowOnFrameBudget","time","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","usedTiles","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","unskipFeature","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","title","handleClick_","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","display","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","layerStates","getLayerRenderer","callback_1","layerKey","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","acc","Composite_extends","Composite","CompositeMapRenderer","children_","render_Event","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","containsTileRange","ol_TileRange","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","transition","getTileImage","getOpaque","alphaChanged","endTransition","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","JSONFeature_extends","getObject","parse","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","midpoint","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","MultiPolygon_extends","geom_MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","DEFAULT_FILL_COLOR","style_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","reproj_render","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","tilegrid_TileGrid","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","CSS_PREFIX","ol_layerswitcher_LayerSwitcher","[object Object]","super","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","this_","onmouseover","showPanel","onclick","onmouseout","toElement","hidePanel","renderPanel","ensureTopVisibleBaseLayerShown_","forEachRecursive","setGroupVisibility","setChildVisibility","ul","renderLayers_","changedLyr","lyr","lyrs","getGroupsAndLayers","isBaseGroup","descendantVisibility","groupVisible","groupIndeterminate","lastVisibleBaseLyr","setVisible_","filterFn","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","indeterminate","onchange","htmlFor","rsl","elm","renderLayer_","scrollStartPos","scrollTop","pageY","createEvent","ol","LayerSwitcher","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","top_1","getOptions","main_map","peopleLayer","Vector","source_Vector","searchResultSource","searchResultLayer","geocoder","ol_geocoder_default","popup","show","fold","Layers","layerSwitcher","createOption","option","innerText","select","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconOrigin","Icon_extends","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","ol_color","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Image"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 80);\n","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/*!\n * ol-geocoder - v4.0.0\n * A geocoder extension for OpenLayers.\n * https://github.com/jonataswalker/ol-geocoder\n * Built: Wed Oct 09 2019 11:36:42 GMT-0300 (Brasilia Standard Time)\n */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],e):(t=t||self).Geocoder=e(t.ol.control.Control,t.ol.style.Style,t.ol.style.Icon,t.ol.layer.Vector,t.ol.source.Vector,t.ol.geom.Point,t.ol.Feature,t.ol.proj)}(this,function(t,a,i,n,s,r,o,d){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t,a=a&&a.hasOwnProperty(\"default\")?a.default:a,i=i&&i.hasOwnProperty(\"default\")?i.default:i,n=n&&n.hasOwnProperty(\"default\")?n.default:n,s=s&&s.hasOwnProperty(\"default\")?s.default:s,r=r&&r.hasOwnProperty(\"default\")?r.default:r,o=o&&o.hasOwnProperty(\"default\")?o.default:o,d=d&&d.hasOwnProperty(\"default\")?d.default:d;var e=\"gcd-container\",l=\"gcd-button-control\",c=\"gcd-input-query\",u=\"gcd-input-reset\",p={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",reset:\"gcd-gl-reset\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",input:\"gcd-txt-input\",reset:\"gcd-txt-reset\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},h={containerId:e,buttonControlId:l,inputQueryId:c,inputResetId:u,cssClasses:p},m=Object.freeze({__proto__:null,containerId:e,buttonControlId:l,inputQueryId:c,inputResetId:u,cssClasses:p,default:h}),g=\"addresschosen\",f=\"nominatim\",y=\"reverse\",v=\"glass-button\",w=\"text-input\",b=\"osm\",k=\"mapquest\",C=\"photon\",x=\"bing\",L=\"opencage\",q={provider:b,placeholder:\"Search for an address\",featureStyle:null,targetType:v,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,autoComplete:!1,autoCompleteMinLength:2,debug:!1};function E(t,e){if(void 0===e&&(e=\"Assertion failed\"),!t){if(\"undefined\"!=typeof Error)throw new Error(e);throw e}}function j(t){var e=function(){if(\"performance\"in window==!1&&(window.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},\"now\"in window.performance==!1){var t=Date.now();performance.timing&&performance.timing.navigationStart&&(t=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-t}}return window.performance.now()}().toString(36);return t?t+e:e}function T(t){return/^\\d+$/.test(t)}function P(t,e,n){if(Array.isArray(t))t.forEach(function(t){return P(t,e)});else for(var s=Array.isArray(e)?e:e.split(/\\s+/),r=s.length;r--;)N(t,s[r])||O(t,s[r],n)}function S(t,e,n){if(Array.isArray(t))t.forEach(function(t){return S(t,e,n)});else for(var s=Array.isArray(e)?e:e.split(/\\s+/),r=s.length;r--;)N(t,s[r])&&D(t,s[r],n)}function N(t,e){return t.classList?t.classList.contains(e):_(e).test(t.className)}function R(t,e,n){void 0===e&&(e=window.document);var s=Array.prototype.slice,r=[];if(/^(#?[\\w-]+|\\.[\\w-.]+)$/.test(t))switch(t[0]){case\"#\":r=[function(t){return t=\"#\"===t[0]?t.substr(1,t.length):t,document.getElementById(t)}(t.substr(1))];break;case\".\":r=s.call(e.getElementsByClassName(t.substr(1).replace(/\\./g,\" \")));break;default:r=s.call(e.getElementsByTagName(t))}else r=s.call(e.querySelectorAll(t));return n?r:r[0]}function I(t,n){return t.replace(/\\{ *([\\w_-]+) *\\}/g,function(t,e){return function(t){return String(t).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#039;\")}(void 0===n[e]?\"\":n[e])})}function A(t,e){var n;if(Array.isArray(t)){if(n=document.createElement(t[0]),t[1].id&&(n.id=t[1].id),t[1].classname&&(n.className=t[1].classname),t[1].attr){var s=t[1].attr;if(Array.isArray(s))for(var r=-1;++r<s.length;)n.setAttribute(s[r].name,s[r].value);else n.setAttribute(s.name,s.value)}}else n=document.createElement(t);n.innerHTML=e;for(var o=document.createDocumentFragment();n.childNodes[0];)o.appendChild(n.childNodes[0]);return n.appendChild(o),n}function _(t){return new RegExp(\"(^|\\\\s+) \"+t+\" (\\\\s+|$)\")}function O(t,e,n){t.classList?t.classList.add(e):t.className=(t.className+\" \"+e).trim(),n&&T(n)&&window.setTimeout(function(){return D(t,e)},n)}function D(t,e,n){t.classList?t.classList.remove(e):t.className=t.className.replace(_(e),\" \").trim(),n&&T(n)&&window.setTimeout(function(){return O(t,e)},n)}function M(t){this.options=t.options,this.els=this.createControl()}var B=m.cssClasses;M.prototype.createControl=function(){var t,e,n;return(n=this.options.targetType===w?(e=B.namespace+\" \"+B.inputText.container,{container:t=A([\"div\",{id:m.containerId,classname:e}],M.input),control:R(\".\"+B.inputText.control,t),input:R(\".\"+B.inputText.input,t),reset:R(\".\"+B.inputText.reset,t),result:R(\".\"+B.inputText.result,t)}):(e=B.namespace+\" \"+B.glass.container,{container:t=A([\"div\",{id:m.containerId,classname:e}],M.glass),control:R(\".\"+B.glass.control,t),button:R(\".\"+B.glass.button,t),input:R(\".\"+B.glass.input,t),reset:R(\".\"+B.glass.reset,t),result:R(\".\"+B.glass.result,t)})).input.placeholder=this.options.placeholder,n},M.glass=['<div class=\"',B.glass.control,\" \",B.olControl,'\">','<button type=\"button\"',' id=\"',m.buttonControlId,'\"',' class=\"',B.glass.button,'\"></button>','<input type=\"text\"',' id=\"',m.inputQueryId,'\"',' class=\"',B.glass.input,'\"',' autocomplete=\"off\" placeholder=\"Search ...\">',\"<a\",' id=\"',m.inputResetId,'\"',' class=\"',B.glass.reset,\" \",B.hidden,'\"',\"></a>\",\"</div>\",'<ul class=\"',B.glass.result,'\"></ul>'].join(\"\"),M.input=['<div class=\"',B.inputText.control,'\">','<input type=\"text\"',' id=\"',m.inputQueryId,'\"',' class=\"',B.inputText.input,'\"',' autocomplete=\"off\" placeholder=\"Search ...\">','<span class=\"',B.inputText.icon,'\"></span>','<button type=\"button\"',' id=\"',m.inputResetId,'\"',' class=\"',B.inputText.reset,\" \",B.hidden,'\"',\"></button>\",\"</div>\",'<ul class=\"',B.inputText.result,'\"></ul>'].join(\"\");function F(){this.settings={url:\"https://photon.komoot.de/api/\",params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}F.prototype.getParameters=function(t){return t.lang=t.lang.toLowerCase(),{url:this.settings.url,params:{q:t.query,limit:t.limit||this.settings.params.limit,lang:-1<this.settings.langs.indexOf(t.lang)?t.lang:this.settings.params.lang}}},F.prototype.handleResponse=function(t){if(t.features.length)return t.features.map(function(t){return{lon:t.geometry.coordinates[0],lat:t.geometry.coordinates[1],address:{name:t.properties.name,postcode:t.properties.postcode,city:t.properties.city,state:t.properties.state,country:t.properties.country},original:{formatted:t.properties.name,details:t.properties}}})};function V(){this.settings={url:\"https://nominatim.openstreetmap.org/search/\",params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}V.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:t.limit||this.settings.params.limit,countrycodes:t.countrycodes||this.settings.params.countrycodes,\"accept-language\":t.lang||this.settings.params[\"accept-language\"]}}},V.prototype.handleResponse=function(t){if(t.length)return t.map(function(t){return{lon:t.lon,lat:t.lat,address:{name:t.display_name,road:t.address.road||\"\",houseNumber:t.address.house_number||\"\",postcode:t.address.postcode,city:t.address.city||t.address.town,state:t.address.state,country:t.address.country},original:{formatted:t.display_name,details:t.address}}})};function Q(){this.settings={url:\"http://open.mapquestapi.com/nominatim/v1/search.php\",params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}Q.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,key:t.key,format:\"json\",addressdetails:1,limit:t.limit||this.settings.params.limit,countrycodes:t.countrycodes||this.settings.params.countrycodes,\"accept-language\":t.lang||this.settings.params[\"accept-language\"]}}},Q.prototype.handleResponse=function(t){if(t.length)return t.map(function(t){return{lon:t.lon,lat:t.lat,address:{name:t.address.neighbourhood||\"\",road:t.address.road||\"\",postcode:t.address.postcode,city:t.address.city||t.address.town,state:t.address.state,country:t.address.country},original:{formatted:t.display_name,details:t.address}}})};function U(){this.settings={url:\"https://dev.virtualearth.net/REST/v1/Locations\",callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}U.prototype.getParameters=function(t){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:t.query,key:t.key,includeNeighborhood:t.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:t.maxResults||this.settings.params.maxResults}}},U.prototype.handleResponse=function(t){var e=t.resourceSets[0].resources;if(e.length)return e.map(function(t){return{lon:t.point.coordinates[1],lat:t.point.coordinates[0],address:{name:t.name},original:{formatted:t.address.formattedAddress,details:t.address}}})};function G(){this.settings={url:\"https://api.opencagedata.com/geocode/v1/json?\",params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}function $(s){return new Promise(function(t,e){var n=function(t,e){e&&\"object\"==typeof e&&(t+=(/\\?/.test(t)?\"&\":\"?\")+function n(s){return Object.keys(s).reduce(function(t,e){return t.push(\"object\"==typeof s[e]?n(s[e]):encodeURIComponent(e)+\"=\"+encodeURIComponent(s[e])),t},[]).join(\"&\")}(e));return t}(s.url,s.data);s.jsonp?function(t,e,n){var s=document.head,r=document.createElement(\"script\"),o=\"f\"+Math.round(Math.random()*Date.now());r.setAttribute(\"src\",t+(0<t.indexOf(\"?\")?\"&\":\"?\")+e+\"=\"+o),window[o]=function(t){window[o]=void 0,setTimeout(function(){return s.removeChild(r)},0),n(t)},s.appendChild(r)}(n,s.callbackName,t):fetch(n,{method:\"GET\",mode:\"cors\",credentials:\"same-origin\"}).then(function(t){return t.json()}).then(t).catch(e)})}G.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,key:t.key,limit:t.limit||this.settings.params.limit,countrycode:t.countrycodes||this.settings.params.countrycodes}}},G.prototype.handleResponse=function(t){if(t.results.length)return t.results.map(function(t){return{lon:t.geometry.lng,lat:t.geometry.lat,address:{name:t.components.house_number||\"\",road:t.components.road||\"\",postcode:t.components.postcode,city:t.components.city||t.components.town,state:t.components.state,country:t.components.country},original:{formatted:t.formatted,details:t.components}}})};function z(t,e){this.Base=t,this.layerName=j(\"geocoder-layer-\"),this.layer=new n({name:this.layerName,source:new s}),this.options=t.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=e,this.lastQuery=\"\",this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}var H=m.cssClasses;return z.prototype.setListeners=function(){var n,s,r=this;this.els.input.addEventListener(\"keypress\",function(t){var e=t.target.value.trim();(t.key?\"Enter\"!==t.key:t.which?13!==t.which:!t.keyCode||13!==t.keyCode)||(t.preventDefault(),r.query(e))},!1),this.els.input.addEventListener(\"click\",function(t){t.stopPropagation()},!1),this.els.input.addEventListener(\"input\",function(t){var e=t.target.value.trim();e.length?S(r.els.reset,H.hidden):P(r.els.reset,H.hidden),r.options.autoComplete&&e!==s&&(s=e,n&&clearTimeout(n),n=setTimeout(function(){e.length>=r.options.autoCompleteMinLength&&r.query(e)},200))},!1),this.els.reset.addEventListener(\"click\",function(t){r.els.input.focus(),r.els.input.value=\"\",r.lastQuery=\"\",P(r.els.reset,H.hidden),r.clearResults()},!1),this.options.targetType===v&&this.els.button.addEventListener(\"click\",function(t){t.stopPropagation(),N(r.els.control,H.glass.expanded)?r.collapse():r.expand()},!1)},z.prototype.query=function(t){var n=this;this.provider||(this.provider=this.newProvider());var e=this.provider.getParameters({query:t,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,limit:this.options.limit});if(this.lastQuery!==t||!this.els.result.firstChild){this.lastQuery=t,this.clearResults(),P(this.els.reset,H.spin);var s={url:e.url,data:e.params};e.callbackName&&(s.jsonp=!0,s.callbackName=e.callbackName),$(s).then(function(t){n.options.debug&&console.info(t),S(n.els.reset,H.spin);var e=n.provider.handleResponse(t);e&&(n.createList(e),n.listenMapClick())}).catch(function(t){S(n.els.reset,H.spin);var e=A(\"li\",\"<h5>Error! No internet connection?</h5>\");n.els.result.appendChild(e)})}},z.prototype.createList=function(t){var s=this,r=this.els.result;t.forEach(function(e){var n;switch(s.options.provider){case b:n='<span class=\"'+H.road+'\">'+e.address.name+\"</span>\";break;default:n=s.addressTemplate(e.address)}var t=A(\"li\",'<a href=\"#\">'+n+\"</a>\");t.addEventListener(\"click\",function(t){t.preventDefault(),s.chosen(e,n,e.address,e.original)},!1),r.appendChild(t)})},z.prototype.chosen=function(t,e,n,s){var r=this.Base.getMap(),o=[parseFloat(t.lon),parseFloat(t.lat)],a=r.getView().getProjection(),i=d.transform(o,\"EPSG:4326\",a),l=t.bbox;l=l&&d.transformExtent(l,\"EPSG:4326\",a);var c={formatted:e,details:n,original:s};if(!1===this.options.keepOpen&&this.clearResults(!0),!0===this.options.preventDefault)this.Base.dispatchEvent({type:g,address:c,coordinate:i,bbox:l});else{l?r.getView().fit(l,{duration:500}):function(t,e,n,s){s=s||2.388657133911758,n=n||500,t.getView().animate({duration:n,resolution:s},{duration:n,center:e})}(r,i);var u=this.createFeature(i,c);this.Base.dispatchEvent({type:g,address:c,feature:u,coordinate:i,bbox:l})}},z.prototype.createFeature=function(t){var e=new o(new r(t));return this.addLayer(),e.setStyle(this.options.featureStyle),e.setId(j(\"geocoder-ft-\")),this.getSource().addFeature(e),e},z.prototype.addressTemplate=function(t){var e=[];return t.name&&e.push(['<span class=\"',H.road,'\">{name}</span>'].join(\"\")),(t.road||t.building||t.house_number)&&e.push(['<span class=\"',H.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(t.city||t.town||t.village)&&e.push(['<span class=\"',H.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(t.state||t.country)&&e.push(['<span class=\"',H.country,'\">{state} {country}</span>'].join(\"\")),I(e.join(\"<br>\"),t)},z.prototype.newProvider=function(){switch(this.options.provider){case b:return new V;case k:return new Q;case C:return new F;case x:return new U;case L:return new G;default:return this.options.provider}},z.prototype.expand=function(){var t=this;S(this.els.input,H.spin),P(this.els.control,H.glass.expanded),window.setTimeout(function(){return t.els.input.focus()},100),this.listenMapClick()},z.prototype.collapse=function(){this.els.input.value=\"\",this.els.input.blur(),P(this.els.reset,H.hidden),S(this.els.control,H.glass.expanded),this.clearResults()},z.prototype.listenMapClick=function(){if(!this.registeredListeners.mapClick){var e=this,n=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,n.addEventListener(\"click\",{handleEvent:function(t){e.clearResults(!0),n.removeEventListener(t.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}},z.prototype.clearResults=function(t){t&&this.options.targetType===v?this.collapse():function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(this.els.result)},z.prototype.getSource=function(){return this.layer.getSource()},z.prototype.addLayer=function(){var e=this,n=!1,t=this.Base.getMap();t.getLayers().forEach(function(t){t===e.layer&&(n=!0)}),n||t.addLayer(this.layer)},function(r){function o(t,e){if(void 0===t&&(t=f),void 0===e&&(e={}),!(this instanceof o))return new o;var n;E(\"string\"==typeof t,\"@param `type` should be string!\"),E(t===f||t===y,\"@param 'type' should be '\"+f+\"'\\n        or '\"+y+\"'!\"),E(\"object\"==typeof e,\"@param `options` should be object!\"),q.featureStyle=[new a({image:new i({scale:.7,src:\"//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png\"})})],this.options=function(t,e){var n={};for(var s in t)n[s]=t[s];for(var r in e)n[r]=e[r];return n}(q,e),this.container=void 0;var s=new M(this);t===f&&(this.container=s.els.container,n=new z(this,s.els),this.layer=n.layer),r.call(this,{element:this.container})}return r&&(o.__proto__=r),((o.prototype=Object.create(r&&r.prototype)).constructor=o).prototype.getLayer=function(){return this.layer},o.prototype.getSource=function(){return this.getLayer().getSource()},o.prototype.setProvider=function(t){this.options.provider=t},o.prototype.setProviderKey=function(t){this.options.key=t},o}(t)});\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","import Control from 'ol/control/Control';\nimport { unByKey } from 'ol/Observable';\n\nvar CSS_PREFIX = 'layer-switcher-';\n\n/**\n * OpenLayers Layer Switcher Control.\n * See [the examples](./examples) for usage.\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param {Object} opt_options Control options, extends ol/control/Control~Control#options adding:\n * @param {String} opt_options.tipLabel the button tooltip.\n * @param {String} opt_options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n *   `'children'` (default) groups have a checkbox and affect child visibility or\n *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n */\nexport default class LayerSwitcher extends Control {\n\n    constructor(opt_options) {\n\n        var options = opt_options || {};\n\n        var tipLabel = options.tipLabel ?\n            options.tipLabel : 'Legend';\n\n        var element = document.createElement('div');\n\n        super({element: element, target: options.target});\n\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n        this.mapListeners = [];\n\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n\n        element.className = this.hiddenClassName;\n\n        var button = document.createElement('button');\n        button.setAttribute('title', tipLabel);\n        element.appendChild(button);\n\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n\n        var this_ = this;\n\n        button.onmouseover = function(e) {\n            this_.showPanel();\n        };\n\n        button.onclick = function(e) {\n            e = e || window.event;\n            this_.showPanel();\n            e.preventDefault();\n        };\n\n        this_.panel.onmouseout = function(e) {\n            e = e || window.event;\n            if (!this_.panel.contains(e.toElement || e.relatedTarget)) {\n                this_.hidePanel();\n            }\n        };\n\n    }\n\n    /**\n    * Set the map instance the control is associated with.\n    * @param {ol/Map~Map} map The map instance.\n    */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (var i = 0, key; i < this.mapListeners.length; i++) {\n            unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            var this_ = this;\n            this.mapListeners.push(map.on('pointerdown', function() {\n                this_.hidePanel();\n            }));\n            this.renderPanel();\n        }\n    }\n\n    /**\n    * Show the layer panel.\n    */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.renderPanel();\n        }\n    }\n\n    /**\n    * Hide the layer panel.\n    */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n        }\n    }\n\n    /**\n    * Re-draw the layer panel to represent the current state of the layers.\n    */\n    renderPanel() {\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle\n        });\n    }\n\n    /**\n    * **Static** Re-draw the layer panel to represent the current state of the layers.\n    * @param {ol/Map~Map} map The OpenLayers Map instance to render layers for\n    * @param {Element} panel The DOM Element into which the layer tree will be rendered\n    */\n    static renderPanel(map, panel, options) {\n\n        options = options || {};\n\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n        LayerSwitcher.ensureTopVisibleBaseLayerShown_(map);\n\n        while(panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n            l.set('indeterminate', false);\n        });\n\n        if (options.groupSelectStyle === 'children' || options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        } else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n\n        var ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(changedLyr) {\n            // console.log('render');\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n\n    }\n\n    static isBaseGroup(lyr) {\n        let lyrs = (lyr.getLayers) ? lyr.getLayers().getArray() : [];\n        return lyrs.length && lyrs[0].get('type') === 'base';\n    }\n\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (group) {\n                // TODO Can we use getLayersArray, is it public in the esm build?\n                let descendantVisibility = group.getLayersArray().map(function (l) {\n                    let state = l.getVisible();\n                    // console.log('>', l.get('title'), state);\n                    return state;\n                });\n                // console.log(descendantVisibility);\n                if (descendantVisibility.every(function (v) {return v === true})) {\n                    group.setVisible(true);\n                    group.set('indeterminate', false);\n                } else if (descendantVisibility.every(function (v) {return v === false})) {\n                    group.setVisible(false);\n                    group.set('indeterminate', false);\n                } else {\n                    group.setVisible(true);\n                    group.set('indeterminate', true);\n                }\n            }\n        );\n    }\n\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (group) {\n            // console.log(group.get('title'));\n            var groupVisible = group.getVisible();\n            var groupIndeterminate = group.get('indeterminate');\n            group.getLayers().getArray().forEach(function (l) {\n                // console.log('>', l.get('title'));\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n\n    /**\n    * **Static** Ensure only the top-most base layer is visible if more than one is visible.\n    * @param {ol/Map~Map} map The map instance.\n    * @private\n    */\n    static ensureTopVisibleBaseLayerShown_(map) {\n        var lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n            if (l.get('type') === 'base' && l.getVisible()) {\n                lastVisibleBaseLyr = l;\n            }\n        });\n        if (lastVisibleBaseLyr) LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true);\n    }\n\n    static getGroupsAndLayers(lyr, filterFn) {\n        let layers = [];\n        filterFn = filterFn || function (l, idx, a) { return true };\n        LayerSwitcher.forEachRecursive(lyr, function(l, idx, a) {\n            if (l.get('title')) {\n                if (filterFn(l, idx, a)) {\n                    layers.push(l);\n                }\n            }\n        });\n        return layers;\n    }\n\n    /**\n    * **Static** Toggle the visible state of a layer.\n    * Takes care of hiding other layers in the same exclusive group if the layer\n    * is toggle to visible.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Base~BaseLayer} The layer whose visibility will be toggled.\n    */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr.getLayers && !lyr.get('combine') && groupSelectStyle === 'children') {\n            lyr.getLayers().forEach(l => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n\n    /**\n    * **Static** Render all layers that are children of a group.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Base~BaseLayer} lyr Layer to be rendered (should have a title property).\n    * @param {Number} idx Position in parent group list.\n    */\n    static renderLayer_(map, lyr, idx, options, render) {\n\n        var li = document.createElement('li');\n\n        var lyrTitle = lyr.get('title');\n\n        var checkboxId = LayerSwitcher.uuid();\n\n        var label = document.createElement('label');\n\n        if (lyr.getLayers && !lyr.get('combine')) {\n\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n\n            // Group folding\n            if (lyr.get('fold')) {\n              li.classList.add(CSS_PREFIX + 'fold');\n              li.classList.add(CSS_PREFIX + lyr.get('fold'));\n              const btn = document.createElement('button');\n              btn.onclick = function (e) {\n                LayerSwitcher.toggleFold_(lyr, li);\n              };\n              li.appendChild(btn);\n            }\n\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function(e) {\n                    LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            var ul = document.createElement('ul');\n            li.appendChild(ul);\n\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n\n        } else {\n\n            li.className = 'layer';\n            var input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n                input.name = 'base';\n            } else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function(e) {\n                LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n\n            var rsl = map.getView().getResolution();\n            if (rsl > lyr.getMaxResolution() || rsl < lyr.getMinResolution()){\n                label.className += ' disabled';\n            }\n\n            li.appendChild(label);\n\n        }\n\n        return li;\n\n    }\n\n    /**\n    * **Static** Render all layers that are children of a group.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Group~LayerGroup} lyr Group layer whose children will be rendered.\n    * @param {Element} elm DOM element that children will be appended to.\n    */\n    static renderLayers_(map, lyr, elm, options, render) {\n        var lyrs = lyr.getLayers().getArray().slice().reverse();\n        for (var i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n\n    /**\n    * **Static** Call the supplied function for each layer in the passed layer group\n    * recursing nested groups.\n    * @param {ol/layer/Group~LayerGroup} lyr The layer group to start iterating from.\n    * @param {Function} fn Callback which will be called for each `ol/layer/Base~BaseLayer`\n    * found under `lyr`. The signature for `fn` is the same as `ol/Collection~Collection#forEach`\n    */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function(lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr.getLayers) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n\n    /**\n    * **Static** Generate a UUID\n    * Adapted from http://stackoverflow.com/a/2117523/526860\n    * @returns {String} UUID\n    */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    }\n\n    /**\n    * @private\n    * @desc Apply workaround to enable scrolling of overflowing content within an\n    * element. Adapted from https://gist.github.com/chrismbarr/4107472\n    */\n    static enableTouchScroll_(elm) {\n        if(LayerSwitcher.isTouchDevice_()){\n            var scrollStartPos = 0;\n            elm.addEventListener(\"touchstart\", function(event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener(\"touchmove\", function(event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n\n    /**\n    * @private\n    * @desc Determine if the current browser supports touch events. Adapted from\n    * https://gist.github.com/chrismbarr/4107472\n    */\n    static isTouchDevice_() {\n        try {\n            document.createEvent(\"TouchEvent\");\n            return true;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n    * Fold/unfold layer group\n    * @private\n    */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', (lyr.get('fold')==='open') ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @private\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n                        ? groupSelectStyle\n                        : 'children';\n    }\n\n}\n\n\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window.ol && window.ol.control) {\n    window.ol.control.LayerSwitcher = LayerSwitcher;\n}\n","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport Vector from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport Stroke from 'ol/style/Stroke';\nimport * as olProj from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Geocoder from 'ol-geocoder/dist/ol-geocoder';\nimport LayerSwitcher from 'ol-layerswitcher/src/ol-layerswitcher';\nimport Overlay from 'ol/Overlay';\nimport {Group as LayerGroup} from 'ol/layer';\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: olProj.fromLonLat([16.372, 48.209]),\n    zoom: 14\n  })\n});\n\nmap.addLayer(new TileLayer({\n  source: new OSM()\n}));\n\n\nconst peopleLayer = new VectorLayer({\n  source: new Vector({\n    url: 'data/map.geojson',\n    format: new GeoJSON()\n  })\n});\npeopleLayer.setStyle(function(feature) {\n  return new Style({\n    text: new Text({\n      text: feature.get('name'),\n      font: 'Bold 8pt Verdana',\n      stroke: new Stroke({\n        color: 'white',\n        width: 3\n      })\n    })\n  });\n});\n\nmap.addLayer(peopleLayer);\n\n\nconst searchResultSource = new Vector();\nconst searchResultLayer = new VectorLayer({\n  source: searchResultSource\n});\n\nsearchResultLayer.setStyle(new Style({\n  image: new Circle({\n    fill: new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    }),\n    stroke: new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    }),\n    radius: 15\n  })\n}));\nmap.addLayer(searchResultLayer);\n\n// Koordinatensuche\nconst xhr = new XMLHttpRequest;\nxhr.open('GET', 'https://photon.komoot.de/api/?q=' + 'Wien Schwedenplatz');\nxhr.onload = function() {\n  const json = JSON.parse(xhr.responseText);\n  const geoJsonReader = new GeoJSON({\n    featureProjection: 'EPSG:3857'\n  });\n  const features = geoJsonReader.readFeatures(json);\n  // eslint-disable-next-line no-console\n  console.log(features);\n  searchResultSource.addFeatures(features);\n};\nxhr.send();\n\n//GEOCODER\nconst geocoder = new Geocoder('nominatim', {\n  provider: 'photon',\n  lang: 'de-AT',\n  placeholder: 'Search for ...',\n  targetType: 'text-input',\n  limit: 5,\n  keepOpen: false\n});\n\ngeocoder.on('addresschosen', function(evt) {\n  const feature = evt.feature,\n      coord = evt.coordinate,\n      address = evt.address;\n  geocoder.getSource().clear(),\n  geocoder.getSource().addFeature(feature),\n  content.innerHTML = '<p>' + address.formatted + '</p>', Overlay.setPosition(coord);\n  /*global content*/\n  /*eslint no-undef: \"error\"*/\n});\n\nconst popup = new Overlay ({\n  element: document.getElementById('popup')\n});\npopup.setPosition();\nmap.addOverlay(popup);\n\ngeocoder.on('addresschosen', function(evt) {\n  window.setTimeout(function() {\n    popup.show(evt.coordinate, evt.address.formatted);\n  }, 3000);\n});\n\nmap.addControl(geocoder);\n//LAYERSWITCHER FUNKTION\n(function() {\n  const map = new Map({\n    target: 'map',\n    layers: [\n      new LayerGroup({\n        'title': 'Base maps',\n        layers: [\n          new TileLayer({\n            title: 'OSM',\n            type: 'base',\n            visible: true,\n            source: new OSM()\n          })\n        ]\n      }),\n      new Overlay ({\n        title: 'Overlays',\n        fold: 'open',\n        layers: [\n          new VectorLayer({\n            title: 'PeopleLayer',\n            source: VectorLayer({\n              params: {\n                'Layers': 'show'\n              },\n              url: 'data/map.geojson'\n            })\n          })\n\n\n        ]\n      })\n    ],\n    view: new View({\n      center: olProj.fromLonLat([16.372, 48.209]),\n      zoom: 14\n    })\n  });\n\n  //LAYERSWITCHER\n  const layerSwitcher = new LayerSwitcher({\n    tipLabel: 'Legende',\n    groupSelectStyle: 'group'\n  });\n  map.addControl(layerSwitcher);\n\n  //SIDEAR\n  // const sidebar = new Sidebar({element: 'sidebar', position: 'left'});\n  // const toc = document.getElementById('layers');\n  // LayerSwitcher.renderPanel(map, toc);\n  // map.addControl(sidebar);\n\n  //SELECTGROUP\n  function createOption(name) {\n    const option = document.createElement('option');\n    option.value = name;\n    option.text = name;\n    return option;\n  }\n\n  const container = document.createElement('div');\n  container.id = 'group-select-style';\n\n  const label = document.createElement('label');\n  label.innerText = 'groupSelectStyle: ';\n  label.htmlFor = 'group-select-style-input';\n\n  const select = document.createElement('select');\n  select.id = 'group-select-style-input';\n  select.add(createOption('children'));\n  select.add(createOption('group'));\n  select.add(createOption('none'));\n\n  select.onchange = function(e) {\n    map.removeControl(layerSwitcher);\n    LayerSwitcher = new LayerSwitcher({\n      groupSelectStyle: select.value\n    });\n    map.addControl(layerSwitcher);\n  };\n\n  container.appendChild(label);\n  container.appendChild(select);\n\n  document.body.appendChild(container);\n})();\n\n","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport { listenOnce, unlistenByKey } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map"],"sourceRoot":""}